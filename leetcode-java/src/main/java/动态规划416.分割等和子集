给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。

示例 1：
输入：nums = [1,5,11,5]
输出：true
解释：数组可以分割成 [1, 5, 5] 和 [11] 。


class Solution {
    public boolean canPartition(int[] nums) {
        int n=nums.length;
        int all=0;
        for(int i=0;i<nums.length;i++)
        all+=nums[i];
        if(all%2==1)
        return false;
        all/=2;
        int []dp=new int[all+1];
        for(int i=0;i<n;i++){
            for(int j=all;j>=nums[i];j--){
                dp[j]=Math.max(dp[j],dp[j-nums[i]]+nums[i]);
            }
            if(dp[all] == all)
                return true;
        }
        return false;
    }
}